/* Theme variables - aligned with sidebar-container themes */
:root {
  /* Importing the same variables used in sidebar-container */
  --node-explorer-width: 300px;
  
  /* Use the same color variables as sidebar-container for consistency */
  --primary-color: var(--sidebar-primary-color, #635BFF);
  --primary-light: var(--sidebar-primary-light, rgba(99, 91, 255, 0.08));
  --gray-light: var(--sidebar-bg, #FFFFFF);
  --gray-border: var(--sidebar-border, #E8E8E8);
  --hover-bg: var(--sidebar-hover-bg, #F5F7FA);
  --text-secondary: var(--sidebar-text-secondary, #697386);
  --text-primary: var(--sidebar-text, #1A1F36);
  --connector-color: var(--sidebar-border, #E8E8E8);
  --selection-bg: var(--sidebar-selection-bg, rgba(59, 130, 246, 0.2));
  --background-color: var(--sidebar-bg, #FFFFFF);
  --selected-text-color: inherit;
  --outline-focus-color: var(--sidebar-outline-focus, #635BFF);
  
  /* Dark theme */
  --primary-color-dark: var(--sidebar-dark-primary-color, #7B68EE);
  --primary-light-dark: var(--sidebar-dark-primary-light, rgba(123, 104, 238, 0.15));
  --gray-light-dark: var(--sidebar-dark-bg, #1A1D27);
  --gray-border-dark: var(--sidebar-dark-border, #3A3E4C);
  --hover-bg-dark: var(--sidebar-dark-hover-bg, #2A2D39);
  --text-secondary-dark: var(--sidebar-dark-text-secondary, #A0AEC0);
  --text-primary-dark: var(--sidebar-dark-text, #E2E8F0);
  --connector-color-dark: var(--sidebar-dark-border, #3A3E4C);
  --selection-bg-dark: var(--sidebar-dark-selection-bg, rgba(123, 104, 238, 0.2));
  --background-color-dark: var(--sidebar-dark-bg, #1A1D27);
  --selected-text-color-dark: inherit;
  --outline-focus-color-dark: var(--sidebar-dark-outline-focus, #7B68EE);
  
  /* Minimal theme */
  --primary-color-minimal: var(--sidebar-minimal-primary-color, #0070f3);
  --primary-light-minimal: var(--sidebar-minimal-primary-light, rgba(0, 112, 243, 0.1));
  --gray-light-minimal: var(--sidebar-minimal-bg, transparent);
  --gray-border-minimal: var(--sidebar-minimal-border, transparent);
  --hover-bg-minimal: var(--sidebar-minimal-hover-bg, rgba(0, 0, 0, 0.03));
  --text-secondary-minimal: var(--sidebar-minimal-text-secondary, #697386);
  --text-primary-minimal: var(--sidebar-minimal-text, #1A1F36);
  --connector-color-minimal: var(--sidebar-minimal-border, #ddd);
  --selection-bg-minimal: var(--sidebar-minimal-selection-bg, rgba(0, 112, 243, 0.1));
  --background-color-minimal: var(--sidebar-minimal-bg, transparent);
  --selected-text-color-minimal: inherit;
  --outline-focus-color-minimal: var(--sidebar-minimal-outline-focus, #0070f3);
  
  /* High contrast theme */
  --primary-color-high-contrast: var(--sidebar-high-contrast-primary-color, #FFD700);
  --primary-light-high-contrast: var(--sidebar-high-contrast-primary-light, rgba(255, 215, 0, 0.15));
  --gray-light-high-contrast: var(--sidebar-high-contrast-bg, #000000);
  --gray-border-high-contrast: var(--sidebar-high-contrast-border, #FFFFFF);
  --hover-bg-high-contrast: var(--sidebar-high-contrast-hover-bg, #333333);
  --text-secondary-high-contrast: var(--sidebar-high-contrast-text-secondary, #FFFFFF);
  --text-primary-high-contrast: var(--sidebar-high-contrast-text, #FFFFFF);
  --connector-color-high-contrast: var(--sidebar-high-contrast-border, #FFFFFF);
  --selection-bg-high-contrast: var(--sidebar-high-contrast-selection-bg, #FFD700);
  --background-color-high-contrast: var(--sidebar-high-contrast-bg, #000000);
  --selected-text-color-high-contrast: #000000;
  --outline-focus-color-high-contrast: var(--sidebar-high-contrast-outline-focus, #FFFFFF);
}

/* Keep the SCSS theme maps for backwards compatibility */
$themes: (
  light: (
    primary-color: #635BFF,
    primary-light: rgba(99, 91, 255, 0.08),
    gray-light: #F7FAFC,
    gray-border: #E8E8E8,
    hover-bg: #F5F7FA,
    text-secondary: #697386,
    text-primary: #1A1F36,
    connector-color: #E8E8E8,
    selection-bg: rgba(59, 130, 246, 0.2),
    background-color: #FFFFFF,
    selected-text-color: inherit,
    outline-focus-color: #635BFF
  ),
  dark: (
    primary-color: var(--primary-color-dark),
    primary-light: var(--primary-light-dark),
    gray-light: var(--gray-light-dark),
    gray-border: var(--gray-border-dark),
    hover-bg: var(--hover-bg-dark),
    text-secondary: var(--text-secondary-dark),
    text-primary: var(--text-primary-dark),
    connector-color: var(--connector-color-dark),
    selection-bg: var(--selection-bg-dark),
    background-color: var(--background-color-dark),
    selected-text-color: var(--selected-text-color-dark),
    outline-focus-color: var(--outline-focus-color-dark)
  ),
  minimal: (
    primary-color: var(--primary-color-minimal),
    primary-light: var(--primary-light-minimal),
    gray-light: var(--gray-light-minimal),
    gray-border: var(--gray-border-minimal),
    hover-bg: var(--hover-bg-minimal),
    text-secondary: var(--text-secondary-minimal),
    text-primary: var(--text-primary-minimal),
    connector-color: var(--connector-color-minimal),
    selection-bg: var(--selection-bg-minimal),
    background-color: var(--background-color-minimal),
    selected-text-color: var(--selected-text-color-minimal),
    outline-focus-color: var(--outline-focus-color-minimal)
  ),
  high-contrast: (
    primary-color: var(--primary-color-high-contrast),
    primary-light: var(--primary-light-high-contrast),
    gray-light: var(--gray-light-high-contrast),
    gray-border: var(--gray-border-high-contrast),
    hover-bg: var(--hover-bg-high-contrast),
    text-secondary: var(--text-secondary-high-contrast),
    text-primary: var(--text-primary-high-contrast),
    connector-color: var(--connector-color-high-contrast),
    selection-bg: var(--selection-bg-high-contrast),
    background-color: var(--background-color-high-contrast),
    selected-text-color: var(--selected-text-color-high-contrast),
    outline-focus-color: var(--outline-focus-color-high-contrast)
  )
);

/* Common transitions */
$transition-duration: 200ms;
$transition-timing: cubic-bezier(0.4, 0, 0.2, 1);

/* Node dimensions - improved for better ergonomics and readability */
$node-padding: 8px 12px; /* Increased from 6px 8px */
$node-margin: 3px 0;     /* Increased from 2px 0 */
$node-border-radius: 6px;
$node-font-size: 14px;   /* Increased from 13px */
$connector-width: 2px;
$spacing-unit: 8px;      /* Base spacing unit for consistency */

/* Base node explorer styles */
.node-explorer {
  font-family: -apple-system, BlinkMacSystemFont, "Segoe UI", Roboto, Helvetica, Arial, sans-serif;
  
  /* Default variables (light theme) */
  --primary-color: #{map-get(map-get($themes, light), primary-color)};
  --primary-light: #{map-get(map-get($themes, light), primary-light)};
  --gray-light: #{map-get(map-get($themes, light), gray-light)};
  --gray-border: #{map-get(map-get($themes, light), gray-border)};
  --hover-bg: #{map-get(map-get($themes, light), hover-bg)};
  --text-secondary: #{map-get(map-get($themes, light), text-secondary)};
  --text-primary: #{map-get(map-get($themes, light), text-primary)};
  --connector-color: #{map-get(map-get($themes, light), connector-color)};
  --selection-bg: #{map-get(map-get($themes, light), selection-bg)};
  --background-color: #{map-get(map-get($themes, light), background-color)};
  --selected-text-color: #{map-get(map-get($themes, light), selected-text-color)};
  --outline-focus-color: #{map-get(map-get($themes, light), outline-focus-color)};
  
  /* Fixed variables with improved dimensions */
  --transition-duration: #{$transition-duration};
  --transition-timing: #{$transition-timing};
  --node-padding: #{$node-padding};
  --node-margin: #{$node-margin};
  --node-border-radius: #{$node-border-radius};
  --node-font-size: #{$node-font-size};
  --connector-width: #{$connector-width};
  --spacing-unit: #{$spacing-unit};
  
  color: var(--text-primary);
  background-color: var(--background-color);
  
  width: auto; /* Ensure it does not fit the parent's width */
  max-width: none; /* Remove any inherited max-width constraints */
  overflow: visible; /* Allow nodes to grow beyond the parent container */
  
  /* Theme variants */
  &.dark-theme {
    --primary-color: #{map-get(map-get($themes, dark), primary-color)};
    --primary-light: #{map-get(map-get($themes, dark), primary-light)};
    --gray-light: #{map-get(map-get($themes, dark), gray-light)};
    --gray-border: #{map-get(map-get($themes, dark), gray-border)};
    --hover-bg: #{map-get(map-get($themes, dark), hover-bg)};
    --text-secondary: #{map-get(map-get($themes, dark), text-secondary)};
    --text-primary: #{map-get(map-get($themes, dark), text-primary)};
    --connector-color: #{map-get(map-get($themes, dark), connector-color)};
    --selection-bg: #{map-get(map-get($themes, dark), selection-bg)};
    --background-color: #{map-get(map-get($themes, dark), background-color)};
    --selected-text-color: #{map-get(map-get($themes, dark), selected-text-color)};
    --outline-focus-color: #{map-get(map-get($themes, dark), outline-focus-color)};
    
    color: var(--text-primary);
    background-color: var(--background-color);
    
    .expand-toggle {
      color: var(--text-secondary);
      
      &:hover {
        color: var(--text-primary);
      }
    }
    
    .node-header:focus {
      outline-width: 2px;
      outline-style: solid;
      outline-offset: 2px;
    }
    
    /* Fix child text color when parent is selected */
    .node.selected .node-children .node-label {
      color: var(--text-primary);
    }
  }
  
  &.minimal-theme {
    --primary-color: #{map-get(map-get($themes, minimal), primary-color)};
    --primary-light: #{map-get(map-get($themes, minimal), primary-light)};
    --gray-light: #{map-get(map-get($themes, minimal), gray-light)};
    --gray-border: #{map-get(map-get($themes, minimal), gray-border)};
    --hover-bg: #{map-get(map-get($themes, minimal), hover-bg)};
    --text-secondary: #{map-get(map-get($themes, minimal), text-secondary)};
    --text-primary: #{map-get(map-get($themes, minimal), text-primary)};
    --connector-color: #{map-get(map-get($themes, minimal), connector-color)};
    --selection-bg: #{map-get(map-get($themes, minimal), selection-bg)};
    --background-color: #{map-get(map-get($themes, minimal), background-color)};
    --selected-text-color: #{map-get(map-get($themes, minimal), selected-text-color)};
    --outline-focus-color: #{map-get(map-get($themes, minimal), outline-focus-color)};
    --connector-width: 1px;
    --node-padding: 6px 10px; /* Adjusted for minimal theme */
    --node-margin: 2px 0;     /* Adjusted for minimal theme */
    --node-border-radius: 3px;
    
    .node.selected > .node-header {
      box-shadow: inset 0 0 0 1px var(--primary-color);
    }
  }
  
  &.high-contrast-theme {
    --primary-color: #{map-get(map-get($themes, high-contrast), primary-color)};
    --primary-light: #{map-get(map-get($themes, high-contrast), primary-light)};
    --gray-light: #{map-get(map-get($themes, high-contrast), gray-light)};
    --gray-border: #{map-get(map-get($themes, high-contrast), gray-border)};
    --hover-bg: #{map-get(map-get($themes, high-contrast), hover-bg)};
    --text-secondary: #{map-get(map-get($themes, high-contrast), text-secondary)};
    --text-primary: #{map-get(map-get($themes, high-contrast), text-primary)};
    --connector-color: #{map-get(map-get($themes, high-contrast), connector-color)};
    --selection-bg: #{map-get(map-get($themes, high-contrast), selection-bg)};
    --background-color: #{map-get(map-get($themes, high-contrast), background-color)};
    --selected-text-color: #{map-get(map-get($themes, high-contrast), selected-text-color)};
    --outline-focus-color: #{map-get(map-get($themes, high-contrast), outline-focus-color)};
    
    color: var(--text-primary);
    background-color: var(--background-color);
    
    .node-header:hover {
      outline: 2px solid var(--primary-color);
    }
    
    .node.selected > .node-header {
      background-color: var(--primary-color);
      color: #000000;
    }
    
    .node.selected .node-label {
      color: #000000;
    }
    
    .node-header:focus {
      outline-width: 2px;
      outline-style: solid;
      outline-offset: 2px;
    }
    
    .expand-toggle {
      color: var(--text-secondary);
      
      &:hover {
        color: var(--text-primary);
      }
    }
    
    /* Fix child text color when parent is selected */
    .node.selected .node-children .node-label {
      color: var(--text-primary);
    }
    
    /* Only apply the black text color to the directly selected node */
    .node.selected > .node-header .node-label {
      color: #000000;
    }
  }

  .node-container {
    background-color: var(--background-color);
    color: var(--text-primary);
  }
  
  .node {
    background-color: transparent;
  }
  
  .node-header {
    color: var(--text-primary);
  }
  
  /* Add multi-select visual style */
  &[allow-multi-select="true"] {
    /* Add a subtle identifier to show multi-select is enabled */
    .node-container {
      position: relative;
      
      &::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        width: 4px;
        height: 100%;
        background-color: var(--primary-color);
        opacity: 0.3;
      }
    }
    
    /* Show clearer selected state */
    .node.selected > .node-header {
      font-weight: 600;
      box-shadow: inset 2px 0 0 var(--primary-color);
    }
  }
}

/* Multi-selection styles */
.node-explorer[allow-multi-select="true"] {
  .node.selected {
    position: relative;
    
    &::after {
      content: "";
      position: absolute;
      top: 0;
      right: 4px;
      width: 6px;
      height: 6px;
      border-radius: 50%;
      background-color: var(--primary-color);
      opacity: 0.8;
    }
  }
  
  /* Keyboard selection visual feedback */
  .node-header:focus {
    &::before {
      content: "";
      position: absolute;
      right: 4px;
      top: 50%;
      transform: translateY(-50%);
      width: 4px;
      height: 4px;
      border-radius: 50%;
      background-color: var(--primary-color);
      opacity: 0.6;
    }
  }
}

/* Component elements */
.explorer-header {
  padding: 16px;   /* Increased from 12px 16px for more breathing room */
  background-color: var(--gray-light);
  border-bottom: 1px solid var(--gray-border);
  display: flex;
  align-items: center;
  justify-content: space-between;
}

.explorer-title {
  font-size: 14px; /* Increased from 13px */
  font-weight: 500;
  color: var(--text-secondary);
  letter-spacing: 0.01em;
}

/* Drop indicators */
.drop-target {
  background-color: var(--primary-light);
  border-radius: var(--node-border-radius);
}

.container-drop-target {
  background-color: var(--primary-light);
  border: 1px dashed var(--primary-color);
  border-radius: var(--node-border-radius);
}

.drop-indicator {
  position: absolute;
  left: 0;
  right: 0;
  height: 3px;
  background-color: var(--primary-color);
  pointer-events: none;
  opacity: 0;
  z-index: 10;
}

.drop-border {
  &-inside {
    box-shadow: inset 0 0 0 2px var(--primary-color);
    border-radius: var(--node-border-radius);
  }
  
  &-before {
    border-top: 3px solid var(--primary-color);
  }
  
  &-after {
    border-bottom: 3px solid var(--primary-color);
  }
}

/* Node structure */
.node {
  position: relative;
  animation: fadeIn 0.3s ease-out;
  max-width: none; /* Remove any width constraints on nodes */
  
  &.selected > .node-header {
    background-color: var(--selection-bg);
    font-weight: 500;
  }
  
  &.selected > .node-header .node-label {
    color: var(--selected-text-color);
  }
  
  /* Ensure child nodes maintain proper color regardless of parent selection */
  &.selected .node-children .node {
    /* Reset any inherited selection styles for child nodes */
    &:not(.selected) > .node-header {
      background-color: transparent;
      font-weight: normal;
      
      .node-label {
        color: var(--text-primary);
      }
    }
  }
}

/* Update scrollbar styles to be 1px */
.node, .node-children {
  scrollbar-width: thin; /* For Firefox */
  scrollbar-color: var(--scrollbar-thumb, #c1c1c1) var(--scrollbar-track, #f5f5f5); /* For Firefox */
}

.node::-webkit-scrollbar, .node-children::-webkit-scrollbar {
  width: 1px; /* Set scrollbar width to 1px */
  height: 1px; /* Set scrollbar height to 1px for horizontal scrollbars */
}

.node::-webkit-scrollbar-thumb, .node-children::-webkit-scrollbar-thumb {
  background-color: var(--scrollbar-thumb, #c1c1c1); /* Subtle thumb color */
  border-radius: 4px; /* Rounded edges */
}

.node::-webkit-scrollbar-track, .node-children::-webkit-scrollbar-track {
  background-color: var(--scrollbar-track, #f5f5f5); /* Subtle track color */
}

/* Add animations specific to targeted nodes */
@keyframes fadeInTargeted {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideInTargeted {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Apply animations only to the targeted node */
.node.targeted {
  animation: fadeInTargeted 0.3s ease-out, slideInTargeted 0.3s ease-out;
}

.node-header {
  transition: none;
  position: relative;
  border-radius: var(--node-border-radius);
  margin: var(--node-margin);
  padding: var(--node-padding);
  min-height: 32px;    /* Added minimum height for better clickability */
  display: flex;       /* Added for better vertical alignment */
  align-items: center; /* Added for better vertical alignment */
  gap: 8px; /* Add spacing between the icon and text */
  
  &:hover {
    background-color: var(--hover-bg);
  }
  
  &:focus {
    outline: 2px solid var(--outline-focus-color);
    outline-offset: -2px; /* Pull the outline inward to avoid cutting off child borders */
    z-index: 1;
    box-shadow: 0 0 0 2px var(--background-color); /* Add a background-colored shadow to mask overflow */
  }
  
  &:focus-visible {
    outline: 2px solid var(--outline-focus-color);
    background-color: var(--hover-bg);
  }
  
  /* Touch-friendly adjustments */
  touch-action: manipulation;
}

.node-label {
  user-select: none;
  white-space: nowrap;
  overflow: hidden;
  font-size: var(--node-font-size);
  color: var(--text-primary);
  line-height: 1.4;    /* Added for better text readability */
  text-overflow: ellipsis;
  flex: 1; /* Ensure the label takes up available space */
}

@media (min-width: 769px) {
  .node-label {
    text-overflow: ellipsis;
  }
}

.expand-toggle {
  color: var(--text-secondary);
  display: inline-flex;     /* Changed from inline-block for better alignment */
  align-items: center;      /* Added for vertical alignment */
  justify-content: center;  /* Added for horizontal alignment */
  text-align: center;
  cursor: pointer;
  font-size: 14px;          /* Increased from 9px for better visibility */
  transition: transform var(--transition-duration) var(--transition-timing),
              color var(--transition-duration) var(--transition-timing);
  margin-right: 12px;       /* Increased from 8px for better spacing */
  min-width: 18px;          /* Added to ensure consistent sizing */
  min-height: 18px;         /* Added to ensure consistent sizing */
  
  &:hover {
    color: var(--text-primary);
    transform: scale(1.1);
  }
  
  /* Touch-friendly adjustments */
  touch-action: manipulation;
  -webkit-tap-highlight-color: transparent;
}

.node-children {
  position: relative; /* Ensure children are properly positioned */
  z-index: 0; /* Prevent overlap with focused node's outline */
  border-left: var(--connector-width) solid var(--connector-color);
  margin-left: 16px;        /* Increased from 12px for better hierarchy visibility */
  padding-left: 12px;       /* Increased from 8px for better spacing */
  overflow: hidden;
  transition: 
    height var(--transition-duration) var(--transition-timing), 
    opacity var(--transition-duration) var(--transition-timing),
    transform var(--transition-duration) var(--transition-timing);
  height: 0;
  opacity: 0;
  will-change: height, opacity;
  transform-origin: top;
  pointer-events: none;
  transform: translateY(0);
  opacity: 1;
  
  &.expanded {
    height: auto;
    opacity: 1;
    pointer-events: auto !important;
    animation: slideIn 0.3s ease-out;
  }
}

.node-container {
  padding: 8px;            /* Increased from 6px for better spacing */
  max-height: 100%;        /* Added to ensure container fits in parent */
  overflow: auto;          /* Added to enable scrolling for large trees */
}

.empty-message {
  padding: 16px;           /* Increased from 12px */
  color: var(--text-secondary);
  font-size: var(--node-font-size);
  text-align: center;
}

/* Add responsive adjustments for smaller screens */
@media (max-width: 768px) {
  .node-explorer {
    --node-padding: 6px 10px; /* Slightly smaller on mobile */
    --node-font-size: 13px;   /* Slightly smaller on mobile */
    font-size: 14px;
    padding: 8px;
    overflow-x: auto; /* Allow horizontal scrolling */
  }
  
  .node-children {
    margin-left: 12px;
    padding-left: 8px;
  }
  
  .expand-toggle {
    margin-right: 8px;
    font-size: 12px;
    width: 30px;
    height: 30px;
  }
  
  .node {
    padding: 10px;
    margin: 5px 0;
  }
  
  .node-header {
    display: flex;
    align-items: center;
    gap: 6px; /* Adjust spacing for mobile */
    padding: 10px;
    font-size: 16px;
  }
  
  .node-children .node-label {
    white-space: normal; /* Ensure text wraps */
    overflow-x: auto; /* Allow horizontal scrolling if needed */
    text-overflow: unset; /* Disable ellipsis */
    display: block; /* Ensure proper layout */
  }
}

/* Add smooth animations for user experience */
@keyframes fadeIn {
  from {
    opacity: 0;
  }
  to {
    opacity: 1;
  }
}

@keyframes slideIn {
  from {
    transform: translateY(-10px);
    opacity: 0;
  }
  to {
    transform: translateY(0);
    opacity: 1;
  }
}

/* Loading indicator styles */
.loading-indicator {
  display: inline-block;
  font-size: 16px;
  color: var(--primary-color, #635BFF);
  animation: spin 1s linear infinite;
}

@keyframes spin {
  0% {
    transform: rotate(0deg);
  }
  100% {
    transform: rotate(360deg);
  }
}