name: Publish Package to NPM

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
      - 'storybook-static/**'
  workflow_dispatch:

jobs:
  check-commit:
    runs-on: ubuntu-latest
    outputs:
      should_run: ${{ steps.check.outputs.should_run }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 1

      - name: Check if commit is a version bump
        id: check
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ $COMMIT_MSG == *"Bump version to"* ]]; then
            echo "should_run=false" >> $GITHUB_OUTPUT
            echo "Skipping workflow for version bump commit"
          else
            echo "should_run=true" >> $GITHUB_OUTPUT
            echo "Proceeding with workflow"
          fi

  publish:
    needs: check-commit
    if: needs.check-commit.outputs.should_run == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write # This ensures the action can write to the repository
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          scope: '@jmkcoder'
          
      - name: Install dependencies
        run: npm ci

      - name: Build package
        run: npm run build

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Determine version bump (patch by default)
        id: bump
        run: |
          COMMIT_MSG=$(git log -1 --pretty=%B)
          if [[ $COMMIT_MSG == *"#major"* ]]; then
            echo "type=major" >> $GITHUB_OUTPUT
          elif [[ $COMMIT_MSG == *"#minor"* ]]; then
            echo "type=minor" >> $GITHUB_OUTPUT
          else
            echo "type=patch" >> $GITHUB_OUTPUT
          fi

      - name: Bump version
        id: version_bump
        run: |
          npm version ${{ steps.bump.outputs.type }} --no-git-tag-version
          echo "new_version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Configure Git
        run: |
          git config --local user.email "41898282+github-actions[bot]@users.noreply.github.com"
          git config --local user.name "github-actions[bot]"
          
      - name: Commit version bump
        run: |
          git add package.json
          git commit -m "Bump version to ${{ steps.version_bump.outputs.new_version }}"
          
      - name: Push changes
        uses: ad-m/github-push-action@master
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          branch: ${{ github.ref }}

      - name: Log version bump
        run: |
          echo "Bumping from ${{ steps.current_version.outputs.version }} to ${{ steps.version_bump.outputs.new_version }}"

      - name: Publish to NPM
        run: npm publish --access=public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_KEY }}

      - name: Create GitHub Release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.version_bump.outputs.new_version }}
          release_name: Release v${{ steps.version_bump.outputs.new_version }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ steps.version_bump.outputs.new_version }}
            
            Changes in this release:
            ${{ github.event.head_commit.message }}
