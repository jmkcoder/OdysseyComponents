name: Publish Package to NPM

on:
  push:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.github/**'
      - 'storybook-static/**'
    tags:
      - 'v[0-9]+.[0-9]+.[0-9]+*'  # Only trigger on version tags (e.g., v1.0.0, v1.2.3-beta)
  workflow_dispatch:
    inputs:
      force_publish:
        description: 'Force publish even without a version tag'
        required: false
        default: 'false'
        type: choice
        options:
          - 'true'
          - 'false'

jobs:
  check_tag:
    runs-on: ubuntu-latest
    outputs:
      has_version_tag: ${{ steps.check_tag.outputs.has_version_tag }}
      version: ${{ steps.get_version.outputs.version }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}
      
      - name: Check for version tag
        id: check_tag
        run: |
          # Check if we have a version tag in this push
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            echo "has_version_tag=true" >> $GITHUB_OUTPUT
          elif [[ "${{ github.event.inputs.force_publish }}" == "true" ]]; then
            echo "has_version_tag=true" >> $GITHUB_OUTPUT
          else
            echo "has_version_tag=false" >> $GITHUB_OUTPUT
          fi
      
      - name: Get version from tag
        id: get_version
        if: steps.check_tag.outputs.has_version_tag == 'true'
        run: |
          if [[ "${{ github.ref }}" == refs/tags/v* ]]; then
            # Extract version from tag
            VERSION=${GITHUB_REF#refs/tags/v}
            echo "version=${VERSION}" >> $GITHUB_OUTPUT
          else
            # Get version from package.json if using force_publish
            echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT
          fi

  publish:
    needs: check_tag
    if: needs.check_tag.outputs.has_version_tag == 'true'
    runs-on: ubuntu-latest
    permissions:
      contents: write
      packages: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '18'
          registry-url: 'https://registry.npmjs.org'
          cache: 'npm'

      - name: Install dependencies
        run: npm ci

      - name: Update package name
        run: |
          sed -i 's/"@odyssey\//"@jmkcoder\//' package.json
          echo "Updated package name from @odyssey to @jmkcoder"

      - name: Build package
        run: npm run build

      - name: Set version from tag
        if: github.ref_type == 'tag'
        run: |
          VERSION=${GITHUB_REF#refs/tags/v}
          npm version $VERSION --no-git-tag-version --allow-same-version
          echo "Using version from tag: $VERSION"

      - name: Get current version
        id: current_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Publish to NPM
        run: npm publish --access public
        env:
          NODE_AUTH_TOKEN: ${{ secrets.NPM_PUBLISH_KEY }}

      - name: Create GitHub Release
        if: github.ref_type != 'tag'
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        with:
          tag_name: v${{ steps.current_version.outputs.version }}
          release_name: Release v${{ steps.current_version.outputs.version }}
          draft: false
          prerelease: false
          body: |
            Release of version ${{ steps.current_version.outputs.version }}
            
            Changes in this release:
            ${{ github.event.head_commit.message }}